const express = require('express');
const cors = require('cors');
const { createProxyMiddleware } = require('http-proxy-middleware');

const app = express();
const PORT = process.env.PORT || 8080;

app.use(cors({ origin: '*' }));

// Health check endpoint - IMPORTANT for Render
app.get('/health', (req, res) => {
    res.status(200).json({ status: 'healthy' });
});

// Simple injection without modifying responses
const injectionScript = `
<script>
    // Wait for page load
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', afterLoad);
    } else {
        afterLoad();
    }
    
    function afterLoad() {
        // Create tools button
        const toolsDiv = document.createElement('div');
        toolsDiv.innerHTML = \`
            <style>
                .stremio-tools {
                    position: fixed;
                    top: 10px;
                    left: 10px;
                    z-index: 999999;
                }
                
                .tools-btn {
                    width: 40px;
                    height: 40px;
                    border-radius: 50%;
                    background: rgba(0, 0, 0, 0.7);
                    border: 1px solid rgba(255, 255, 255, 0.2);
                    color: white;
                    cursor: pointer;
                    font-size: 20px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    border: none;
                }
                
                .tools-menu {
                    display: none;
                    position: absolute;
                    top: 45px;
                    left: 0;
                    background: rgba(0, 0, 0, 0.95);
                    border-radius: 8px;
                    padding: 8px;
                    min-width: 200px;
                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
                }
                
                .tools-menu.show {
                    display: block;
                }
                
                .menu-item {
                    color: white;
                    padding: 8px 12px;
                    cursor: pointer;
                    font-size: 13px;
                    border-radius: 4px;
                    display: block;
                    text-decoration: none;
                    background: transparent;
                    border: none;
                    width: 100%;
                    text-align: left;
                }
                
                .menu-item:hover {
                    background: rgba(139, 92, 246, 0.3);
                }
                
                .menu-divider {
                    border-top: 1px solid rgba(255, 255, 255, 0.1);
                    margin: 4px 0;
                }
            </style>
            
            <div class="stremio-tools">
                <button class="tools-btn" id="toolsBtn">‚ö°</button>
                <div class="tools-menu" id="toolsMenu">
                    <a href="https://torrentio.strem.fun" target="_blank" class="menu-item">‚ûï Torrentio</a>
                    <a href="https://cyberflix.elfhosted.com" target="_blank" class="menu-item">‚ûï Cyberflix</a>
                    <div class="menu-divider"></div>
                    <button class="menu-item" data-player="vlc">üü† Use VLC</button>
                    <button class="menu-item" data-player="infuse">üî• Use Infuse</button>
                    <button class="menu-item" data-player="web">üåê Use Web Player</button>
                </div>
            </div>
        \`;
        
        document.body.appendChild(toolsDiv);
        
        // Menu toggle
        document.getElementById('toolsBtn').addEventListener('click', function(e) {
            e.stopPropagation();
            document.getElementById('toolsMenu').classList.toggle('show');
        });
        
        // Player selection
        document.querySelectorAll('[data-player]').forEach(function(btn) {
            btn.addEventListener('click', function() {
                const player = this.dataset.player;
                localStorage.setItem('preferredPlayer', player);
                alert('Player set to: ' + player.toUpperCase());
                document.getElementById('toolsMenu').classList.remove('show');
            });
        });
        
        // Close menu on outside click
        document.addEventListener('click', function() {
            document.getElementById('toolsMenu').classList.remove('show');
        });
        
        // Video interceptor
        let lastUrl = '';
        setInterval(function() {
            const videos = document.querySelectorAll('video');
            videos.forEach(function(v) {
                if (v.src && v.src !== lastUrl && v.src.includes('http')) {
                    lastUrl = v.src;
                    const player = localStorage.getItem('preferredPlayer');
                    if (player === 'vlc') {
                        if (confirm('Open in VLC?')) {
                            window.location.href = 'vlc-x-callback://x-callback-url/stream?url=' + encodeURIComponent(v.src);
                        }
                    } else if (player === 'infuse') {
                        if (confirm('Open in Infuse?')) {
                            window.location.href = 'infuse://x-callback-url/play?url=' + encodeURIComponent(v.src);
                        }
                    }
                }
            });
        }, 2000);
    }
</script>
`;

// Main route - serve custom page
app.get('/', (req, res) => {
    res.send(`
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Stremio</title>
    <style>
        body { margin: 0; padding: 0; overflow: hidden; }
        iframe { width: 100vw; height: 100vh; border: none; }
    </style>
</head>
<body>
    <iframe src="https://web.stremio.com" allow="fullscreen autoplay"></iframe>
    ${injectionScript}
</body>
</html>
    `);
});

// Simpler proxy without response modification
app.use('/proxy', createProxyMiddleware({
    target: 'https://web.stremio.com',
    changeOrigin: true,
    followRedirects: true,
    onProxyReq: (proxyReq, req, res) => {
        // Remove encoding to avoid compression issues
        proxyReq.removeHeader('accept-encoding');
    },
    onProxyRes: (proxyRes, req, res) => {
        // Remove security headers
        delete proxyRes.headers['x-frame-options'];
        delete proxyRes.headers['content-security-policy'];
        // Don't modify content, let it pass through
    }
}));

// Start server with explicit binding message
const server = app.listen(PORT, '0.0.0.0', () => {
    console.log(`Server running on port ${PORT}`);
    console.log(`Health check: http://localhost:${PORT}/health`);
});

// Graceful shutdown
process.on('SIGTERM', () => {
    server.close(() => {
        console.log('Server closed');
    });
});